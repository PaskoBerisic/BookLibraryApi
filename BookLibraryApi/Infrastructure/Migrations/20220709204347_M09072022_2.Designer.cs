// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BookLibraryContext))]
    [Migration("20220709204347_M09072022_2")]
    partial class M09072022_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationCore.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bibliography")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bibliography = "Bibliography 1",
                            CountryId = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(3826),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1950, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name",
                            LastName = "Surname",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(3828),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Bibliography = "Bibliography 2",
                            CountryId = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(3833),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1950, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name 2",
                            LastName = "Surname 2",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(3834),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Bibliography = "Bibliography 3",
                            CountryId = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(3837),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1950, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name 3",
                            LastName = "Surname 3",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(3838),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 10,
                            Bibliography = "Bibliography 8",
                            CountryId = 2,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(3840),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1975, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Elon",
                            LastName = "Musk",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(3841),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<decimal>("ListPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<decimal>("RentalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<int?>("UserBasketId")
                        .HasColumnType("int");

                    b.Property<int>("YearOfPublish")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("UserBasketId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4803),
                            CreatedBy = 1,
                            Description = "Description about the book1",
                            LanguageId = 1,
                            ListPrice = 0.70m,
                            PublisherId = 1,
                            RentalPrice = 1.20m,
                            Title = "Book1",
                            UnitNumber = 3,
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4805),
                            UpdatedBy = 1,
                            YearOfPublish = 1999
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4810),
                            CreatedBy = 1,
                            Description = "Description about the book2",
                            LanguageId = 2,
                            ListPrice = 0.90m,
                            PublisherId = 1,
                            RentalPrice = 1.50m,
                            Title = "Book2",
                            UnitNumber = 3,
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4811),
                            UpdatedBy = 1,
                            YearOfPublish = 1899
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4814),
                            CreatedBy = 1,
                            Description = "Description about the book3",
                            LanguageId = 1,
                            ListPrice = 1.70m,
                            PublisherId = 2,
                            RentalPrice = 2.20m,
                            Title = "Book3",
                            UnitNumber = 3,
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4814),
                            UpdatedBy = 1,
                            YearOfPublish = 2005
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4817),
                            CreatedBy = 1,
                            Description = "Description about the book tesla",
                            LanguageId = 2,
                            ListPrice = 1.30m,
                            PublisherId = 3,
                            RentalPrice = 1.90m,
                            Title = "Tesla",
                            UnitNumber = 5,
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4818),
                            UpdatedBy = 1,
                            YearOfPublish = 2018
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentedFromDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentedToDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnedDate")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("BookRentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4866),
                            CreatedBy = 1,
                            OrderId = 1,
                            RentedFromDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentedToDate = new DateTime(2020, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(2020, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Closed",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4868),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4873),
                            CreatedBy = 1,
                            OrderId = 2,
                            RentedFromDate = new DateTime(2020, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentedToDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(2020, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Closed",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4875),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4877),
                            CreatedBy = 1,
                            OrderId = 3,
                            RentedFromDate = new DateTime(2020, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RentedToDate = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Opened",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4878),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<int>("VAT")
                        .HasPrecision(4)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4912),
                            CreatedBy = 1,
                            Name = "England",
                            ShortName = "Eng",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4913),
                            UpdatedBy = 1,
                            VAT = 25
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4916),
                            CreatedBy = 1,
                            Name = "France",
                            ShortName = "Fra",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4917),
                            UpdatedBy = 1,
                            VAT = 20
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4920),
                            CreatedBy = 1,
                            Name = "Germany",
                            ShortName = "GER",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4920),
                            UpdatedBy = 1,
                            VAT = 10
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4962),
                            CreatedBy = 1,
                            Description = "Description about the genre 1 ",
                            IsActive = true,
                            Name = "Genre 1",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4964),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4967),
                            CreatedBy = 1,
                            Description = "Description about the genre 2",
                            IsActive = false,
                            Name = "Genre 2",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4968),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4970),
                            CreatedBy = 1,
                            Description = "Description about the genre 3",
                            IsActive = true,
                            Name = "Genre 3",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4972),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4973),
                            CreatedBy = 1,
                            Description = "Description about the genre 3",
                            IsActive = true,
                            Name = "Documentary",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(4974),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5539),
                            CreatedBy = 1,
                            Name = "English",
                            ShortName = "Eng",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5541),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5543),
                            CreatedBy = 1,
                            Name = "France",
                            ShortName = "Fra",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5544),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5546),
                            CreatedBy = 1,
                            Name = "German",
                            ShortName = "Ger",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5547),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Date")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalRentalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRentalPriceWithVAT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "E",
                            Date = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalRentalPrice = 1.20m,
                            TotalRentalPriceWithVAT = 1.50m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Currency = "U",
                            Date = new DateTime(2020, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalRentalPrice = 1.20m,
                            TotalRentalPriceWithVAT = 1.50m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Currency = "E",
                            Date = new DateTime(2020, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalRentalPrice = 1.60m,
                            TotalRentalPriceWithVAT = 2m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Currency = "E",
                            Date = new DateTime(2021, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalRentalPrice = 1.60m,
                            TotalRentalPriceWithVAT = 2m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5952),
                            CreatedBy = 1,
                            Name = "Publisher 1",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5953),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5956),
                            CreatedBy = 1,
                            Name = "Publisher 2",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5958),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5960),
                            CreatedBy = 1,
                            Name = "Publisher 3",
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5960),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.SystemSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DefaultCurrency")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Adresa 1",
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5993),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name 1",
                            IsActive = true,
                            LastName = "Surname 1",
                            Password = "123456",
                            Role = 0,
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5994),
                            UpdatedBy = 1,
                            Username = "User1"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Adresa 2",
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(5999),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name 2",
                            IsActive = true,
                            LastName = "Surname 2",
                            Password = "123456",
                            Role = 0,
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(6000),
                            UpdatedBy = 1,
                            Username = "User2"
                        },
                        new
                        {
                            Id = 3,
                            Adress = "Adresa 2",
                            Created = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(6003),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name 3",
                            IsActive = true,
                            LastName = "Surname 3",
                            Password = "123456",
                            Role = 0,
                            Updated = new DateTime(2022, 7, 9, 20, 43, 46, 422, DateTimeKind.Utc).AddTicks(6004),
                            UpdatedBy = 1,
                            Username = "User3"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.UserBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Currency")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("TotalRentalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRentalPriceWithVAT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserBaskets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TotalRentalPrice = 1.20m,
                            TotalRentalPriceWithVAT = 1.50m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            TotalRentalPrice = 1.0m,
                            TotalRentalPriceWithVAT = 1.25m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            TotalRentalPrice = 1.60m,
                            TotalRentalPriceWithVAT = 2.0m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.HasKey("AuthorsId", "BooksId");

                    b.HasIndex("BooksId");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            AuthorsId = 1,
                            BooksId = 1
                        },
                        new
                        {
                            AuthorsId = 1,
                            BooksId = 2
                        },
                        new
                        {
                            AuthorsId = 2,
                            BooksId = 2
                        },
                        new
                        {
                            AuthorsId = 3,
                            BooksId = 3
                        },
                        new
                        {
                            AuthorsId = 10,
                            BooksId = 4
                        });
                });

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            BooksId = 1,
                            GenresId = 1
                        },
                        new
                        {
                            BooksId = 2,
                            GenresId = 1
                        },
                        new
                        {
                            BooksId = 2,
                            GenresId = 2
                        },
                        new
                        {
                            BooksId = 3,
                            GenresId = 3
                        },
                        new
                        {
                            BooksId = 4,
                            GenresId = 4
                        });
                });

            modelBuilder.Entity("BookOrder", b =>
                {
                    b.Property<int>("BooksId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("BooksId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("BookOrder");

                    b.HasData(
                        new
                        {
                            BooksId = 1,
                            OrdersId = 1
                        },
                        new
                        {
                            BooksId = 2,
                            OrdersId = 1
                        },
                        new
                        {
                            BooksId = 4,
                            OrdersId = 2
                        },
                        new
                        {
                            BooksId = 3,
                            OrdersId = 3
                        },
                        new
                        {
                            BooksId = 2,
                            OrdersId = 3
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Author", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Book", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.UserBasket", null)
                        .WithMany("Books")
                        .HasForeignKey("UserBasketId");

                    b.Navigation("Language");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookRental", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Order", b =>
                {
                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.SystemSettings", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("ApplicationCore.Entities.UserBasket", b =>
                {
                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookGenre", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookOrder", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationCore.Entities.Language", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ApplicationCore.Entities.UserBasket", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
