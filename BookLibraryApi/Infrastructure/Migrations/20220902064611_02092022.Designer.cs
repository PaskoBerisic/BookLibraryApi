// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BookLibraryContext))]
    [Migration("20220902064611_02092022")]
    partial class _02092022
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationCore.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bibliography")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bibliography = "Bibliography 1",
                            CountryId = 1,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1694),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1950, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name",
                            LastName = "Surname",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1696),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Bibliography = "Bibliography 2",
                            CountryId = 3,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1698),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1800, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name 2",
                            LastName = "Surname 2",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1698),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Bibliography = "Bibliography 3",
                            CountryId = 1,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1707),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(2000, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name 3",
                            LastName = "Surname 3",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1707),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 4,
                            Bibliography = "Bibliography 4",
                            CountryId = 2,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1709),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1975, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name 4",
                            LastName = "Surname 4",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1709),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<decimal>("ListPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<decimal>("RentalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UnitNumber")
                        .HasColumnType("int");

                    b.Property<int>("UnitsRented")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<int>("YearOfPublish")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1855),
                            CreatedBy = 1,
                            Description = "Description about the book 1",
                            LanguageId = 3,
                            ListPrice = 0.70m,
                            PublisherId = 1,
                            RentalPrice = 1.20m,
                            Title = "Book 1",
                            UnitNumber = 3,
                            UnitsRented = 10,
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1855),
                            UpdatedBy = 1,
                            YearOfPublish = 1999
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1857),
                            CreatedBy = 1,
                            Description = "Description about the book 2",
                            LanguageId = 2,
                            ListPrice = 0.90m,
                            PublisherId = 1,
                            RentalPrice = 1.50m,
                            Title = "Book 2",
                            UnitNumber = 3,
                            UnitsRented = 15,
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1858),
                            UpdatedBy = 1,
                            YearOfPublish = 1899
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1859),
                            CreatedBy = 1,
                            Description = "Description about the book 3",
                            LanguageId = 1,
                            ListPrice = 1.70m,
                            PublisherId = 2,
                            RentalPrice = 2.20m,
                            Title = "Book 3",
                            UnitNumber = 3,
                            UnitsRented = 2,
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1859),
                            UpdatedBy = 1,
                            YearOfPublish = 2005
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1861),
                            CreatedBy = 1,
                            Description = "Description about the book 4",
                            LanguageId = 2,
                            ListPrice = 1.30m,
                            PublisherId = 3,
                            RentalPrice = 1.90m,
                            Title = "Book 4",
                            UnitNumber = 5,
                            UnitsRented = 0,
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1861),
                            UpdatedBy = 1,
                            YearOfPublish = 1500
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            BookId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            BookId = 2
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            BookId = 1
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            BookId = 2
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            BookId = 3
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            BookId = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 1,
                            GenreId = 2
                        },
                        new
                        {
                            Id = 4,
                            BookId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 1,
                            GenreId = 3
                        },
                        new
                        {
                            Id = 6,
                            BookId = 2,
                            GenreId = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 3,
                            GenreId = 3
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("OrderId");

                    b.ToTable("BookOrder");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 2,
                            OrderId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 3,
                            OrderId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 1,
                            OrderId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 1,
                            OrderId = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 3,
                            OrderId = 3
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookUserBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("UserBasketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserBasketId");

                    b.ToTable("BookUserBasket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            UserBasketId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            UserBasketId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 1,
                            UserBasketId = 2
                        },
                        new
                        {
                            Id = 4,
                            BookId = 2,
                            UserBasketId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 3,
                            UserBasketId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 1,
                            UserBasketId = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 3,
                            UserBasketId = 3
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<int>("VAT")
                        .HasPrecision(4)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1887),
                            CreatedBy = 1,
                            Name = "England",
                            ShortName = "ENG",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1887),
                            UpdatedBy = 1,
                            VAT = 25
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1889),
                            CreatedBy = 1,
                            Name = "France",
                            ShortName = "FRA",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1889),
                            UpdatedBy = 1,
                            VAT = 20
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1899),
                            CreatedBy = 1,
                            Name = "Germany",
                            ShortName = "GER",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1899),
                            UpdatedBy = 1,
                            VAT = 10
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1922),
                            CreatedBy = 1,
                            Description = "Description about the genre 1 ",
                            Name = "Genre 1",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1923),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1924),
                            CreatedBy = 1,
                            Description = "Description about the genre 2",
                            Name = "Genre 2",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1924),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1925),
                            CreatedBy = 1,
                            Description = "Description about the genre 3",
                            Name = "Genre 3",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1925),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1926),
                            CreatedBy = 1,
                            Description = "Description about the genre 4",
                            Name = "Genre 4",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1926),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShortName")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1951),
                            CreatedBy = 1,
                            Name = "English",
                            ShortName = "Eng",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1952),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1961),
                            CreatedBy = 1,
                            Name = "France",
                            ShortName = "Fra",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1961),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1966),
                            CreatedBy = 1,
                            Name = "Italian",
                            ShortName = "Ita",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(1967),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Date")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalRentalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRentalPriceWithVAT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "EUR",
                            Date = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalRentalPrice = 1.20m,
                            TotalRentalPriceWithVAT = 1.50m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Currency = "USD",
                            Date = new DateTime(2019, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalRentalPrice = 1.20m,
                            TotalRentalPriceWithVAT = 1.50m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Currency = "GBP",
                            Date = new DateTime(2020, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalRentalPrice = 1.60m,
                            TotalRentalPriceWithVAT = 2m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Currency = "HRK",
                            Date = new DateTime(2021, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalRentalPrice = 1.60m,
                            TotalRentalPriceWithVAT = 2m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(2111),
                            CreatedBy = 1,
                            Name = "Publisher 1",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(2112),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(2114),
                            CreatedBy = 1,
                            Name = "Publisher 2",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(2114),
                            UpdatedBy = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(2115),
                            CreatedBy = 1,
                            Name = "Publisher 3",
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 474, DateTimeKind.Utc).AddTicks(2115),
                            UpdatedBy = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("Created")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordCrypted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasMaxLength(25)
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasMaxLength(15)
                        .HasColumnType("int");

                    b.Property<int?>("UserBasketId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("UserBasketId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Address 1",
                            Created = new DateTime(2022, 9, 2, 6, 46, 9, 869, DateTimeKind.Utc).AddTicks(5322),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@booklibrary.com",
                            FirstName = "Name 1",
                            IsActive = true,
                            LastName = "Surname 1",
                            PasswordCrypted = "$2a$11$WliGiDvcoC7FE8AhnTYVVuRSkVv6hzd8qmIM6GS3zEktb5R54l4Va",
                            Role = 0,
                            Updated = new DateTime(2022, 9, 2, 6, 46, 9, 869, DateTimeKind.Utc).AddTicks(5323),
                            UpdatedBy = 1,
                            UserBasketId = 1,
                            Username = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Address 2",
                            Created = new DateTime(2022, 9, 2, 6, 46, 10, 183, DateTimeKind.Utc).AddTicks(1342),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@booklibrary.com",
                            FirstName = "Name 2",
                            IsActive = true,
                            LastName = "Surname 2",
                            PasswordCrypted = "$2a$11$Zt1m7yb/XYZHCv9ROD7trusHLz2Y63H4HQqOwH.9FTr5JsIdC9j1u",
                            Role = 2,
                            Updated = new DateTime(2022, 9, 2, 6, 46, 10, 183, DateTimeKind.Utc).AddTicks(1344),
                            UpdatedBy = 1,
                            UserBasketId = 2,
                            Username = "User2"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Address 3",
                            Created = new DateTime(2022, 9, 2, 6, 46, 10, 462, DateTimeKind.Utc).AddTicks(3244),
                            CreatedBy = 1,
                            DateOfBirth = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@booklibrary.com",
                            FirstName = "Name 3",
                            IsActive = true,
                            LastName = "Surname 3",
                            PasswordCrypted = "$2a$11$Uu2hVbHreGKMrm5qENWrMeuDX1IjyuGDR46R9T9RV99CM2zfBsJ4G",
                            Role = 2,
                            Updated = new DateTime(2022, 9, 2, 6, 46, 10, 462, DateTimeKind.Utc).AddTicks(3245),
                            UpdatedBy = 1,
                            UserBasketId = 3,
                            Username = "User3"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.UserBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Currency")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal>("TotalRentalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRentalPriceWithVAT")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("UserBaskets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "EUR",
                            TotalRentalPrice = 1.20m,
                            TotalRentalPriceWithVAT = 1.50m
                        },
                        new
                        {
                            Id = 2,
                            Currency = "USD",
                            TotalRentalPrice = 1.0m,
                            TotalRentalPriceWithVAT = 1.25m
                        },
                        new
                        {
                            Id = 3,
                            Currency = "GBP",
                            TotalRentalPrice = 1.60m,
                            TotalRentalPriceWithVAT = 2.0m
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Author", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Book", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookAuthor", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Author", "Author")
                        .WithMany("BookAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookGenre", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Book", "Book")
                        .WithMany("BookGenres")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Genre", "Genre")
                        .WithMany("BookGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookOrder", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Book", "Book")
                        .WithMany("BookOrders")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Order", "Order")
                        .WithMany("BookOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ApplicationCore.Entities.BookUserBasket", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Book", "Book")
                        .WithMany("BookUserBaskets")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.UserBasket", "UserBasket")
                        .WithMany("BookUserBaskets")
                        .HasForeignKey("UserBasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("UserBasket");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Order", b =>
                {
                    b.HasOne("ApplicationCore.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Entities.User", b =>
                {
                    b.HasOne("ApplicationCore.Entities.UserBasket", "UserBasket")
                        .WithMany()
                        .HasForeignKey("UserBasketId");

                    b.Navigation("UserBasket");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Author", b =>
                {
                    b.Navigation("BookAuthors");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Book", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("BookGenres");

                    b.Navigation("BookOrders");

                    b.Navigation("BookUserBaskets");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Genre", b =>
                {
                    b.Navigation("BookGenres");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Order", b =>
                {
                    b.Navigation("BookOrders");
                });

            modelBuilder.Entity("ApplicationCore.Entities.UserBasket", b =>
                {
                    b.Navigation("BookUserBaskets");
                });
#pragma warning restore 612, 618
        }
    }
}
